@page "/currentproducts"

@using DNEBlazor.Data.Models.Ecom;
@using DNEBlazor.Repository.Data;
@using DNEBlazor.Service.Ecom;
@inherits OwningComponentBase<ProductCategoryService>
@inject DNEBlazor.Repository.Ecom.IProductEcom iProductEcom;

<div class="row">
    <div class="col-4">
        <div class="card text-white mb-3" style="max-width: 18rem;">
            <div class="card-header bg-info">Save Products</div>
            <div class="card-body">
                @*<form>*@ @*// do not use form tag to stop page reloading//*@
                    <label class="text-secondary">Name</label>
                    <input type="text" class="form-control" style="width:15rem;" @bind="@productEcom.Name" /> <br />
                    <label class="text-secondary">Price</label>
                    <input type="text" class="form-control" style="width:15rem;" @bind="@productEcom.Price" /> <br />
                    <label class="text-secondary">Category</label>
                    <select class="form-select mt-2" @bind="@productEcom.ProductCategoryId">@foreach (var items in ProductCategories) { <option value="@items.Id">@items.Name</option> } </select> <br />
                    <label class="text-secondary">Brand</label>
                    <select class="form-select mt-2" @bind="@productEcom.BrandId">@foreach (var items in Brands.Where(m=>m.ProductCategoryId == productEcom.ProductCategoryId)) { <option value="@items.Id">@items.Name</option> } </select> <br />
                    <a class="form-control btn btn-info text-white" @onclick="@(m =>Save())" style="width:15rem;"><i class="fas fa-plus"></i> &nbsp; Save</a>
                @*</form>*@
            </div>
        </div>
    </div>
    <div class="col-8">
        <table class="table table-hover table-bordered table-sm text-center" style="background-color:lightskyblue" width="100%">
            <thead class="table table-primary">
                <tr>
                    <th>Id</th>
                    <th>Name</th>
                    <th>Price</th>
                    <th>CategoryId</th>
                    <th>BrandId</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (ProductEcom productEcom in productsEcom)
                {
                    <tr>
                        <td>@productEcom.Id</td>
                        <td>@productEcom.Name</td>
                        <td>@productEcom.Price</td>
                        <td>@productEcom.ProductCategory.Name</td>
                        <td>@productEcom.Brand.Name</td>
                        <td>
                            <a class="btn btn-dark text-white btn-sm" @onclick="@(m=>PreloadInputFields(@productEcom))"><i class="fas fa-edit"></i> &nbsp; Edit</a>
                            <a class="btn btn-danger text-white btn-sm" @onclick="@(m=>Remove(@productEcom.Id))"><i class="fas fa-trash-alt"></i> &nbsp; Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@code {

    ProductEcom productEcom = new ProductEcom();
    ProductCategory productCategory = new ProductCategory();
    List<ProductEcom> productsEcom = new List<ProductEcom>();
    List<ProductCategory> ProductCategories { get; set; }
    List<Brand> Brands { get; set; }

    protected override void OnInitialized()
    {
        LoadProducts();
        ProductCategories = Service.RenderProductCategoriesList();
        Brands = Service.RenderBrandsList();
    }

    private void LoadProducts()
    {
        productsEcom = new List<ProductEcom>();
        productsEcom = iProductEcom.ToListProducts(); 
    }

    private void Remove(int Id)
    {
        string delete = iProductEcom.Delete(Id);
    }

    private void Save()
    {
        if (productEcom.Id == 0)
        {
            productEcom = iProductEcom.Add(productEcom);
        }
        else
        {
            productEcom = iProductEcom.Update(productEcom);
        }

        productEcom = new ProductEcom();
        LoadProducts();

    }

    private void PreloadInputFields(ProductEcom productEcomDM)
    {
        productEcom = productEcomDM;
    }
}