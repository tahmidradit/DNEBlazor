@page "/leadsview"
@attribute [Authorize]
@using DNEBlazor.Data.Models;
@using DNEBlazor.Repository.Data;
@using DNEBlazor.Service;
@inject DNEBlazor.Repository.ILead iLead;
@inherits DNEBlazor.Pages.Leads.LeadsViewPageModel

<center>
    <h3>Lead Data</h3> <br />
</center>

@if (LeadsList.Count() == 0)
{
    <DNEBlazor.Pages.Shared.NoLeadsData /> 
}
else
{
    <div class="widget-header">
        <div class="row">
            <div class="col-md-4">
                
            </div>
            <div class="col-md-4">
                <div class="input-group">
                    <input type="text" class="form-control" placeholder="Search by name"  />
                    <div class="input-group-append">
                        <button class="btn btn-outline-info">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-search toggle-search"><circle cx="11" cy="11" r="8"></circle><line x1="21" y1="21" x2="16.65" y2="16.65"></line></svg>
                        </button>
                    </div>
                </div>
            </div>
            <div class="col-md-4 text-right" align="right">
                <a href="/AddLead" class="btn btn-outline-secondary" role="button"><i class="fa fa-plus"></i> New</a>
            </div>
        </div>
        <hr />
    </div>
    <div class="widget-content widget-content-area">
        <div class="table-responsive">
            <table class="table table-bordered table-hover text-center table-striped mb-4">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>First Name</th>
                        <th>Last Name</th>
                        <th>Email</th>
                        <th>Phone</th>
                        <th>Category</th>
                        <th>Created By</th>
                        <th>Updated By</th>
                        <th>Date Created</th>
                        <th>Date Updated</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var lead in LeadsList)
                    {
                        <tr>
                            <td>@lead.Id</td>
                            <td>@lead.FirstName</td>
                            <td>@lead.LastName</td>
                            <td>@lead.Email</td>
                            <td>@lead.Phone</td>
                            <td>@lead.Category.Name</td>
                            <td>@lead.CreatedByUserId</td>
                            <td>@lead.UpdatedByUserId</td>
                            <td>@lead.DateCreated</td>
                            <td>@lead.DateUpdated</td>
                            <td class="text-center">
                                <a href="@($"/EditLead/{lead.Id}")" data-toggle="tooltip" data-placement="top" title="" data-original-title="Edit"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-check-circle text-primary"><path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path><polyline points="22 4 12 14.01 9 11.01"></polyline></svg></a>
                                <a href="javascript:void(0);" data-bs-toggle="modal" data-bs-target="#exampleModal" ><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x-circle text-danger"><circle cx="12" cy="12" r="10"></circle><line x1="15" y1="9" x2="9" y2="15"></line><line x1="9" y1="9" x2="15" y2="15"></line></svg></a>
                            </td>
                        </tr>
                    }

                </tbody>
            </table>
        </div>
    </div>

    <!-- Modal -->
    <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Are you sure to delete ?</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <table class="table table-danger">
                        @*<tr>
                            <td>Id:</td>
                            <td>@LeadsList.FirstOrDefault().Id</td>
                        </tr>*@
                        <tr>
                            <td>First Name:</td>
                            <td>@LeadsList.FirstOrDefault().FirstName</td>
                        </tr>
                        <tr>
                            <td>Last Name:</td>
                            <td>@LeadsList.FirstOrDefault().LastName</td>
                        </tr>
                        <tr>
                            <td>Email:</td>
                            <td>@LeadsList.FirstOrDefault().Email</td>
                        </tr>
                        <tr>
                            <td>Phone:</td>
                            <td>@LeadsList.FirstOrDefault().Phone</td>
                        </tr>
                        <tr>
                            <td>Updated:</td>
                            <td>@LeadsList.FirstOrDefault().Category.Name</td>
                        </tr>
                        <tr>
                            <td>Created By:</td>
                            <td>@LeadsList.FirstOrDefault().CreatedByUserId</td>
                        </tr>
                        <tr>
                            <td>Updated By:</td>
                            <td>@LeadsList.FirstOrDefault().UpdatedByUserId</td>
                        </tr>
                        <tr>
                            <td>Date Created:</td>
                            <td>@LeadsList.FirstOrDefault().DateCreated</td>
                        </tr>
                        <tr>
                            <td>Date Updated:</td>
                            <td>@LeadsList.FirstOrDefault().DateUpdated</td>
                        </tr>
                    </table>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-warning" data-bs-dismiss="modal"><i class="flaticon-cancel-12"></i> No</button>
                    <a type="button" data-bs-dismiss="modal" class="btn btn-primary" @onclick="@( m => Remove(@LeadsList.FirstOrDefault().Id))">YES</a>
                </div>
            </div>
        </div>
    </div>
}

@code {

    //[Inject]
    //protected AuthenticationStateProvider authenticationStateProvider { get; set; }

    //[Inject]
    //protected LeadService leadService { get; set; }
    //Lead lead = new Lead();
    //List<Lead> Leads = new List<Lead>();
    //IEnumerable<Category> Categories { get; set; }
    //[Inject]
    //public NavigationManager navigationManager { get; set; }
    //[Parameter]
    //public string Id { get; set; }
    //protected override async Task OnInitializedAsync()
    //{

    //    LoadLeads();
    //    var authenticationStateProviderAsync = await authenticationStateProvider.GetAuthenticationStateAsync();
    //    var user = authenticationStateProviderAsync.User.Claims;
    //    lead = new Lead()
    //        {
    //            CreatedByUserId = user.FirstOrDefault().Value,
    //            UpdatedByUserId = user.FirstOrDefault().Value,
    //            DateCreated = DateTime.Now,
    //            DateUpdated = DateTime.Now
    //        };
    //    Categories = leadService.RenderCategoriesList();
        
    //}

    //private void LoadLeads()
    //{
    //    Leads = new List<Lead>();
    //    Leads = iLead.ToListLeads();
    //}

    //private void Remove(int Id)
    //{
    //    string delete = iLead.Delete(Id);
    //}

    //public async Task Save()
    //{
    //    if (lead.Id == 0)
    //    {
    //        lead =  iLead.Add(lead);
    //    }
    //    else
    //    {
    //        lead = await iLead.Update(lead, authenticationStateProvider);
    //    }

    //    lead = new Lead();
    //    LoadLeads();

    //}

    //private void PreloadInputFields(Lead leadDM)
    //{
    //    lead = leadDM;
    //}
}

