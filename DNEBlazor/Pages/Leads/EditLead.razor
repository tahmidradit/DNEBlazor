@page "/EditLead/{Id:int}"
@using DNEBlazor.Data.Models
@attribute [Authorize]

@using DNEBlazor.Repository.Data;
@using DNEBlazor.Service;
@using Microsoft.AspNetCore.Http;
@using Microsoft.AspNetCore.Identity;
@inject DNEBlazor.Repository.ILead iLead;

<center>
    <h3>AddLead</h3> <br />
</center>


<div class="widget-content widget-content-area">
    <EditForm Model="@lead" OnValidSubmit="Save">
        <DataAnnotationsValidator />
        <div class="form-group row mb-4">
            <div class="col-sm-10">
                <div class="form-group row">
                    <div class="col-1">
                        <label class="text-secondary">First Name</label>
                    </div>
                    <div class="col-4">
                        <input type="text" class="form-control mt-2" @bind="@lead.FirstName" />
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-1">
                        <label class="text-secondary">Last Name</label>
                    </div>
                    <div class="col-4">
                        <input type="text" class="form-control mt-2" @bind="@lead.LastName" />
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-1">
                        <label class="text-secondary">Email</label>
                    </div>
                    <div class="col-4">
                        <input type="text" class="form-control mt-2" @bind="@lead.Email" />
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-1">
                        <label class="text-secondary">Phone</label>
                    </div>
                    <div class="col-4">
                        <input type="text" class="form-control mt-2" @bind="@lead.Phone" />
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-1">
                        <label class="text-secondary">Category</label>
                    </div>
                    <div class="col-4">
                        <select class="form-select mt-2" @bind="@lead.CategoryId"> @foreach(var items in Categories) { <option value="@items.Id">@items.Name</option> } </select>
                    </div>
                </div>
            </div>
        </div>

        <input type="submit" class="btn btn-outline-success mt-3" value="Save">
        <button type="button" class="btn btn-outline-primary mt-3" @onclick="(() => Redirect())">Cancel</button>
    </EditForm>

</div>

@code {
    [Inject]
    protected AuthenticationStateProvider authenticationStateProvider { get; set; }
    Lead lead = new Lead();
    IEnumerable<Category> Categories => iLead.RenderCategoriesList();
    [Inject]
	public NavigationManager UrlNavigationManager { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authenticationStateProviderAsync = await authenticationStateProvider.GetAuthenticationStateAsync();
        var user = authenticationStateProviderAsync.User.Claims;
        lead = new Lead()
        {
            CreatedByUserId = user.FirstOrDefault().Value,
            UpdatedByUserId = user.FirstOrDefault().Value,
            DateCreated = DateTime.Now,
            DateUpdated = DateTime.Now
        };

    }
    public void Save()
    {
        if (lead.Id == 0)
        {
            lead = iLead.Add(lead);
            UrlNavigationManager.NavigateTo("/leadsview");
        }

        lead = new Lead();

    }
    
    public void Redirect()
    {
        UrlNavigationManager.NavigateTo("/leadsview");
    }
}
